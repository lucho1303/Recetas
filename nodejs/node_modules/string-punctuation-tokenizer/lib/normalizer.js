"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.normalize = exports.stripHebrewNonSemanticGlyphs = exports._hebrewNonSemanticGlyphs = void 0;

var _xregexp = _interopRequireDefault(require("xregexp"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

// constants
// NOTE: in UHB, maqqef 05BE is followed by 2060, word joiner.
// Therefore, we should NOT strip maqqef to match tokenization, which splits on nonword characters.
var _hebrewNonSemanticGlyphs = "[\u0591-\u05AF\u05BD\u05C0\u05C3-\u05C5\u2060]";
exports._hebrewNonSemanticGlyphs = _hebrewNonSemanticGlyphs;
var stripHebrewNonSemanticGlyphs = (0, _xregexp["default"])(_hebrewNonSemanticGlyphs, 'gi');
/**
 * Normalize a string: standard Javascript normalization, plus optional "lossy" normalization for Hebrew and Greek unicode.
 * @return {String} normalized string.
 */

exports.stripHebrewNonSemanticGlyphs = stripHebrewNonSemanticGlyphs;

var normalize = function normalize(_ref) {
  var _ref$text = _ref.text,
      text = _ref$text === void 0 ? '' : _ref$text,
      _ref$form = _ref.form,
      form = _ref$form === void 0 ? 'NFKC' : _ref$form,
      _ref$lossy = _ref.lossy,
      lossy = _ref$lossy === void 0 ? false : _ref$lossy;

  if (lossy) {
    text = _xregexp["default"].replace(text, stripHebrewNonSemanticGlyphs, '');
  }

  text = text.normalize(form);
  return text;
};

exports.normalize = normalize;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9ub3JtYWxpemVyLmpzIl0sIm5hbWVzIjpbIl9oZWJyZXdOb25TZW1hbnRpY0dseXBocyIsInN0cmlwSGVicmV3Tm9uU2VtYW50aWNHbHlwaHMiLCJub3JtYWxpemUiLCJ0ZXh0IiwiZm9ybSIsImxvc3N5IiwieFJlZ0V4cCIsInJlcGxhY2UiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7OztBQUVBO0FBQ0E7QUFDQTtBQUNPLElBQU1BLHdCQUF3QixHQUNuQyxnREFESzs7QUFFQSxJQUFNQyw0QkFBNEIsR0FBRyx5QkFDMUNELHdCQUQwQyxFQUUxQyxJQUYwQyxDQUFyQztBQUtQOzs7Ozs7O0FBSU8sSUFBTUUsU0FBUyxHQUFHLFNBQVpBLFNBQVksT0FBaUQ7QUFBQSx1QkFBOUNDLElBQThDO0FBQUEsTUFBOUNBLElBQThDLDBCQUF2QyxFQUF1QztBQUFBLHVCQUFuQ0MsSUFBbUM7QUFBQSxNQUFuQ0EsSUFBbUMsMEJBQTVCLE1BQTRCO0FBQUEsd0JBQXBCQyxLQUFvQjtBQUFBLE1BQXBCQSxLQUFvQiwyQkFBWixLQUFZOztBQUN4RSxNQUFJQSxLQUFKLEVBQVc7QUFDVEYsSUFBQUEsSUFBSSxHQUFHRyxvQkFBUUMsT0FBUixDQUFnQkosSUFBaEIsRUFBc0JGLDRCQUF0QixFQUFvRCxFQUFwRCxDQUFQO0FBQ0Q7O0FBQ0RFLEVBQUFBLElBQUksR0FBR0EsSUFBSSxDQUFDRCxTQUFMLENBQWVFLElBQWYsQ0FBUDtBQUVBLFNBQU9ELElBQVA7QUFDRCxDQVBNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHhSZWdFeHAgZnJvbSAneHJlZ2V4cCc7XHJcblxyXG4vLyBjb25zdGFudHNcclxuLy8gTk9URTogaW4gVUhCLCBtYXFxZWYgMDVCRSBpcyBmb2xsb3dlZCBieSAyMDYwLCB3b3JkIGpvaW5lci5cclxuLy8gVGhlcmVmb3JlLCB3ZSBzaG91bGQgTk9UIHN0cmlwIG1hcXFlZiB0byBtYXRjaCB0b2tlbml6YXRpb24sIHdoaWNoIHNwbGl0cyBvbiBub253b3JkIGNoYXJhY3RlcnMuXHJcbmV4cG9ydCBjb25zdCBfaGVicmV3Tm9uU2VtYW50aWNHbHlwaHMgPVxyXG4gICdbXFx1MDU5MS1cXHUwNUFGXFx1MDVCRFxcdTA1QzBcXHUwNUMzLVxcdTA1QzVcXHUyMDYwXSc7XHJcbmV4cG9ydCBjb25zdCBzdHJpcEhlYnJld05vblNlbWFudGljR2x5cGhzID0geFJlZ0V4cChcclxuICBfaGVicmV3Tm9uU2VtYW50aWNHbHlwaHMsXHJcbiAgJ2dpJ1xyXG4pO1xyXG5cclxuLyoqXHJcbiAqIE5vcm1hbGl6ZSBhIHN0cmluZzogc3RhbmRhcmQgSmF2YXNjcmlwdCBub3JtYWxpemF0aW9uLCBwbHVzIG9wdGlvbmFsIFwibG9zc3lcIiBub3JtYWxpemF0aW9uIGZvciBIZWJyZXcgYW5kIEdyZWVrIHVuaWNvZGUuXHJcbiAqIEByZXR1cm4ge1N0cmluZ30gbm9ybWFsaXplZCBzdHJpbmcuXHJcbiAqL1xyXG5leHBvcnQgY29uc3Qgbm9ybWFsaXplID0gKHsgdGV4dCA9ICcnLCBmb3JtID0gJ05GS0MnLCBsb3NzeSA9IGZhbHNlIH0pID0+IHtcclxuICBpZiAobG9zc3kpIHtcclxuICAgIHRleHQgPSB4UmVnRXhwLnJlcGxhY2UodGV4dCwgc3RyaXBIZWJyZXdOb25TZW1hbnRpY0dseXBocywgJycpO1xyXG4gIH1cclxuICB0ZXh0ID0gdGV4dC5ub3JtYWxpemUoZm9ybSk7XHJcblxyXG4gIHJldHVybiB0ZXh0O1xyXG59O1xyXG4iXX0=